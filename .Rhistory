demo()
find.package("devtools")
install.package("devtools")
install.packages("devtools")
find.package(devtools)
find.package("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
install.packages(c("httr", "RCurl"))
library("tools", lib.loc="C:/Program Files/R/R-3.1.0/library")
?
load(base)
library(base)
library(devtools)
graphics
library(graphics)
graphics
demo()
demo(graphics)
x <- 8
print x
print(x)
x
x <- 4 , 5 ,6,7
x <- (4 , 5 ,6,7)
x <- (4,5 ,6,7)
x <- [4,5 ,6,7]
x <- 4;5;6;6
x
x<- 1:25
as.logic(x)
as.logical(x)
as.numeric(x)
as.complex(x) + 2i
x*i
x*1i
dim(x)<-c(5,5)
x
sex <- c("male", "female")
sex
sex <- factor(c("male", "female"))
sex
sex
table(sex)
x
sex
unclass(sex)
atributes(sex)<- "Levels" = c("male","female")
atribute(sex)<- "Levels" = c("male","female")
?
x
?
atribute
atributes
atributes(sex)
attribute(sex)<- "Levels" = c("male","female")
attributes(sex)<- "Levels" = c("male","female")
attributes(sex)
attributes(sex) <-$levels = c("male","female")
attributes(sex) <- levels = c("male","female")
attributes(sex) <- "levels" = c("male","female")
levels(sex) <- c("male", "female")
table(sex)
unclass(sex)
attr
x <- matrix(1:6,2,3)
x
matrix
sqrt(*10^12-.4)
sqrt(10^12-.4)
library(datasets)
?iris
data(iris)
iris
?rowmeans
?rowMeans
rowMeans(iris, dims = 1)
x<- iris[Species == virginica]
str(iris)
iris$Species
iris[Species=2]
iris[iris$Species=2]
iris[2]
x<- iris[, , , ,virginica ]
x<- iris[, , , , "virginica" ]
x<- iris[, , , , "virginica" ]
x<- iris[, , ,  "virginica" ]
x<- iris["virginica" ]
x<- iris[iris$Species=="virginica" ]
x<- iris[iris$Species="virginica" ]
x<- iris[iris$Species= 2 ]
x<- iris[iris$Species == 2 ]
x
x<- iris[iris$Species = "virginica" ]
x<- iris[iris$Species = 1:2]
x<- iris[which(iris$Species = "virginica")]
x<- iris[which(Species = "virginica")]
x<- iris[which(Species == "virginica")]
x<- iris[which(iris$Species == "virginica")]
str(iris)
x<- iris[which(iris$Species == "setosa")]
x<- iris[which(iris$species == "setosa")]
x<- iris[which(iris$species = "setosa")]
x<- iris[which(iris$species = 1)]
x<- iris[which(iris$Species = 1)]
x<- iris[which(iris$species == "setosa"),]
x<- iris[,which(iris$Species == "virginica")]
x<- iris[which(iris$Species == "virginica"),]
x
x[1]
rowMeans(x)
rowMeans(x[1])
mean(x[1])
mean(x)
sapply(x, mean)
x
lapply(x, mean)
rowMeans(iri[,1:4])
rowMeans(iris[,1:4])
apply(x, 2, mean)
apply(iris, 2, mean)
apply(iris[,1:4], 2, mean)
data(mtcars)
str(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
x <-tapply(mtcars$hp, mtcars$cyl, mean)
x[3]
x[3]-x[1]
debug(ls)
ls
dt(x = .05, df = 17)
pt(q = 0.3926018, df = 17, lower.tail = F)
pt(q = 0.3926018, df = 17, lower.tail = F)*2
pt(q = 0.3926018, df = 17, lower.tail = T)
qt(.05, 17,lower.tail = F)
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL", type = “source”)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
library(rmysql)
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
result
install.packages("Rodbc)
""
)
install.packages("Rodbc")
y
install.packages("RODBC")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
biocLite("rhdf5")
biocLite("rhdf5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
getwd()
created = h5createGroup("example.h5","foo")
created = h5createGroup("example.h5","baa")
created = h5createGroup("example.h5","foo/foobaa")
h5ls("example.h5")
A = matrix(1:10,nr=5,nc=2)
h5write(A, "example.h5","foo/A")
B = array(seq(0.1,2.0,by=0.1),dim=c(5,2,2))
attr(B, "scale") <- "liter"
h5write(B, "example.h5","foo/foobaa/B")
h5ls("example.h5")
readA = h5read("example.h5","foo/A")
readB = h5read("example.h5","foo/foobaa/B")
readdf= h5read("example.h5","df")
readA
readdf
readdf= h5read("example.h5","df")
readA
h5ls("example.h5")
df = data.frame(1L:5L,seq(0,1,length.out=5),
c("ab","cde","fghi","a","s"), stringsAsFactors=FALSE)
h5write(df, "example.h5","df")
h5ls("example.h5")
readA = h5read("example.h5","foo/A")
readB = h5read("example.h5","foo/foobaa/B")
readdf= h5read("example.h5","df")
readA
readdf
h5write(c(12,13,14),"example.h5","foo/A",index=list(1:3,1))
h5read("example.h5","foo/A")
install.packages("httr")
library(httr)
getwd()
setwd("~/Courses/get cleaning data/GetData_assign1")
cat("loading required packages")
library(dplyr)
library(tidyr)
library(data.table) #loading required packages
rData <- function(x, y, sub) {
# this function will take the data set, assign the names and the right columns
if(!file.exists("./UCI HAR Dataset")){stop("data set directory does not exist, please check instructions") }
x <- read.table(x, quote="\"", stringsAsFactors=FALSE)
features <- read.table("./UCI HAR Dataset/features.txt", quote="\"", stringsAsFactors=FALSE) #read column names
names(x) <- features$V2
#next lines subsets
x <- select(x, contains("-mean()"), contains("-std()"))
y <- read.table(y, quote="\"", stringsAsFactors=FALSE)
names(y) <- "activity_id"
x <- cbind(y, x) # now we have the right set with means and std of x plus the activity
# now we attach the subject ID
sub <- read.table(sub, quote="\"", stringsAsFactors=FALSE)
names(sub) <- "subject_id"
x <- cbind(sub, x)
x
}
yTest <- "./UCI HAR Dataset/test/y_test.txt"
xTest <- "./UCI HAR Dataset/test/X_test.txt"
subTest <- "./UCI HAR Dataset/test/subject_test.txt"
yTrain <- "./UCI HAR Dataset/train/y_train.txt"
xTrain <- "./UCI HAR Dataset/train/X_train.txt"
subTrain <- "./UCI HAR Dataset/train/subject_train.txt"
dataTrain <- rData(xTrain, yTrain, subTrain)
dataTest <- rData(xTest, yTrain, subTest)
#View(set_test)
dataTest <- rData(xTest, yTest, subTest)
View(dataTest)
t <- set_id = "test"
t <- "test"
subTest <- cbind(t, subTest)
head(subTest)
subTest <- "./UCI HAR Dataset/test/subject_test.txt"
set_id <- t
set_id
dataTest <- cbind(set_id, dataTest)
head(dataTest)
any(dataTest$set_id != "test")
rm(t)
set_id <- c("test", "train")
dataTrain <- cbind(set_id[2], dataTrain)
any(dataTrain$set_id[2] != "train")
dataTrain <- rData(xTrain, yTrain, subTrain)
set_id <- "test"
dataTest <- rData(xTest, yTest, subTest)
dataTest1 <- data.table(dataTest, keep.rownames = F, key = 1:3)
dataTest1 <- data.table(dataTest, keep.rownames = F, key = dataTest[1:3])
?data.table
names(dataTest[1:3])
names(dataTest[1:2])
dataTest1 <- data.table(dataTest, keep.rownames = F, key = names(dataTest[1:2])
)
dataTest1
dataTest1 <- cbind(set_id, dataTest1)
str(dataTest1)
dataTest1 <- data.table(dataTest1, keep.rownames = F, key = names(dataTest[1:3])
)
str(dataTest1)
View(dataTest1)
?merge
rm(dataTest1)
data <- merge(dataTest, dataTrain)
class(data)
class(dataTest)
dataTest <- rData(xTest, yTest, subTest)
dataTrain <- rData(xTrain, yTrain, subTrain)
set_id <- "test"
dataTest <- cbind(set_id, dataTest)
set_id <- "train"
dataTrain <- cbind(set_id, dataTrain)
dataTest <- data.table(dataTest, keep.rownames = F, key = names(dataTest[1:3]))
dataTrain <- data.table(dataTrain, keep.rownames = F, key = names(dataTrain[1:3])) #
data <- merge(dataTest, dataTrain, all = T)
2947+7352
data <- data.table(dataTest, dataTrain)
data <- merge(dataTest, dataTrain)
str(dataTest)
attributes(dataTest)
data <- merge(dataTest, dataTrain, by = dataTest)
data <- merge(dataTest, dataTrain, by = 1:82)
?join
data <- join(dataTest, dataTrain)
library(dplyr)
data <- join(dataTest, dataTrain)
data <- inner_join(dataTest, dataTrain)
data
data <- anti_join(dataTest, dataTrain)
data <- semi_join(dataTest, dataTrain)
data <- union
rm(data)
data <- union(dataTest, dataTrain)
data <- intersect(dataTest, dataTrain)
data <- rbind_all(dataTest, dataTrain)
data <- rbind_list(dataTest, dataTrain)
View(data)
data[set_id = "train"]
data[set_id = "train",]
data[set_id == "train",]
library(dplyr)
library(tidyr)
library(data.table)
swirl()
library(swirl)
swirl()
install_from_swirl("Data analysis")
install_from_swirl("Data analysis")
install_from_swirl("Data Analysis")
install_from_swirl("Data Analysis")
setInternet2 = TRUE
setInternet2(TRUE)
rm(setInternet2)
install_from_swirl("Data Analysis")
install_from_swirl("Data Analysis")
install_from_swirl("Data Analysis")
?download
?download.file
setInternet2(TRUE)
install_from_swirl("Data Analysis")
library("tidyr", lib.loc="~/R/win-library/3.1")
library("swirl", lib.loc="~/R/win-library/3.1")
detach("package:swirl", unload=TRUE)
library("formatR", lib.loc="~/R/win-library/3.1")
library("dplyr", lib.loc="~/R/win-library/3.1")
library("swirl", lib.loc="~/R/win-library/3.1")
swirl()
detach("package:swirl", unload=TRUE)
class(data)
data <- as.data.table(rbind_list(dataTest, dataTrain)) #bind them all
View(data)
class(data)
data
